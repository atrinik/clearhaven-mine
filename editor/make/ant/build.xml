<?xml version="1.0" encoding="UTF-8"?>
<!--
  This is the ANT buildfile for the DaimoninEditor
  (c) 2003 by Andreas Vogl
  Apache Ant is a Java-based cross-platform build tool.
  For more information about Ant, visit <http://ant.apache.org/>
  
  Do not move, edit or delete this file. It should stay in the
  main directory of the DaimoninEditor.
  
  How to use Ant for the DaimoninEditor:
  
  o Install Ant on your system. Make sure both the JAVA_HOME
    and ANT_HOME environment variables are set correctly.
    
  o Change into the DaimoninEditor main directory.
    On the console type "ant" to compile, then "ant run"
    to run the DaimoninEditor.
-->
<project name="AtrinikEditor" default="jar" basedir="../..">

    <!-- set properties and clean build directory -->
    <target name="init">
        <property name="src.dir" value="src" />
        <property name="lib.dir" value="lib" />
        <property name="resource.dir" value="resource" />
        <property name="arch.dir" value="../arch" />
        <property name="config.dir" value="../arch/dev/editor/conf" />
        <property name="build.dir" value="class" />
        <property name="jarname" value="AtrinikEditor.jar" />
    </target>
    
    <!-- delete and recreate the build directory -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <mkdir dir="${build.dir}" />
    </target>
    
    <!-- compiling all Java classes -->
    <target name="compile" depends="init,clean">
        <javac srcdir="${src.dir}" destdir="${build.dir}">
            <classpath>
                <fileset dir="${lib.dir}" includes="*.jar" />
            </classpath>
        </javac>
    </target>
    
    <!-- create JAR file -->
    <target name="jar" depends="compile">
        <!-- extract classes from jar files into the build dir -->
        <unjar src="${lib.dir}/png.jar" dest="${build.dir}" />
        <unjar src="${lib.dir}/visualtek.jar" dest="${build.dir}" />
        <unjar src="${lib.dir}/jdom.jar" dest="${build.dir}" />
        <unjar src="${lib.dir}/crimson.jar" dest="${build.dir}" />
        <delete dir="${build.dir}/META-INF" />
        
        <!-- copy the resource files into the build dir -->
        <copy todir="${build.dir}">
            <fileset dir="${resource.dir}">
                <exclude name="**/Entries,**/Repository,**/Root"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${config.dir}" />
        </copy>
        <copy file="${arch.dir}/archetypes" todir="${build.dir}" />
        <copy file="${arch.dir}/atrinik.0" todir="${build.dir}" />
        <copy file="${arch.dir}/treasures" todir="${build.dir}" />
        <delete dir="${build.dir}/customize" />
        
        <jar destfile="${jarname}">
            <!-- pack everything into the jar file -->
            <fileset dir="${build.dir}"
                excludes="**/Entries,**/Repository,**/Root,MANIFEST.MF"/>
            
            <!-- creating the manifest -->
            <manifest>
                <attribute name="Main-Class" value="cfeditor.CFJavaEditor"/>
            </manifest>
        </jar>
        
        <!-- delete the build directory -->
        <delete dir="${build.dir}" />
    </target>
    
    <!-- run the jar file with default memory (60 Mb) -->
    <target name="run_low" depends="init">
        <java jar="${jarname}" fork="true" failonerror="true" />
    </target>
    
    <!-- run the jar file with extra memory (128 Mb) -->
    <target name="run" depends="init">
        <java jar="${jarname}" fork="true" failonerror="true"
              maxmemory="128m" />
    </target>
</project>
