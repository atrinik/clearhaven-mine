/**
@var DISEASE
See @ref page_type_158
*/

/**
@page page_type_158 Disease


@section Description
	<![CDATA[
		Diseases are an intersting form of spellcraft in Atrinik. Once
		cast, they can spread out and infect creatures in a large area.
		Being infected can have various effects, from amusing farts to
		horrible damage - almost everything is possible.
	



Type defined by:
- @ref object::type = 158


@section Attributes

<table>
	<tr>
		<th>Attribute</th>
		<th>Field</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>anim speed</td>
		<td>@ref obj::anim_speed</td>
		<td>		How fast to play this animation.
		</td>
	</tr>
	<tr>
		<td>animation</td>
		<td>@ref obj::animation_id</td>
		<td>		The animation-name defines what animation is displayed for this
		object in-game. Note that a set animation will overrule the face.
		</td>
	</tr>
	<tr>
		<td>attenuation</td>
		<td>@ref obj::last_grace</td>
		<td>			The &lt;attenuation&gt; value reduces the diseases'
			&lt;infectiousness&gt; everytime it infects someone new. This
			limits how many generations a disease can propagate.
		</td>
	</tr>
	<tr>
		<td>block view</td>
		<td>@ref FLAG_BLOCKSVIEW</td>
		<td>		If an item is set to block view, players (and monsters) cannot
		see beyond it unless they cross it or manage to stand on top of
		it.
		</td>
	</tr>
	<tr>
		<td>can reflect missiles</td>
		<td>@ref FLAG_CAN_REFL_MISSILE</td>
		<td>		Object can reflect missiles. See reflect missiles.
		</td>
	</tr>
	<tr>
		<td>can reflect spells</td>
		<td>@ref FLAG_CAN_REFL_SPELL</td>
		<td>		Object can reflect spells. See reflect spells.
		</td>
	</tr>
	<tr>
		<td>create arch</td>
		<td>@ref obj::other_arch</td>
		<td>			If set, the specified arch is created and dropped every time
			the symptoms strike.

			This can be various things: farts, body pieces, eggs...

			Even monsters can be created that way. You could also make a
			disease where some exotic stuff like money/gems is created.
		</td>
	</tr>
	<tr>
		<td>curing duration</td>
		<td>@ref liv::maxgrace</td>
		<td>			The disease will last in the host for &lt;curing duration&gt;
			"disease moves" (assuming the host survives and doesn't use a
			curing spell).

			After this period the disease is naturally cured, which
			provides the host with immunity from this particular disease
			of lower or equal level.

			A negative value means the disease can never be cured
			naturally.

			Note that this value can be further modulated by spell
			parameters, if the disease is registered as spell in the
			code. Due to that, most default diseases take a lot longer to
			cure than it seems.
		</td>
	</tr>
	<tr>
		<td>cursed</td>
		<td>@ref FLAG_CURSED</td>
		<td>		The item is cursed. This object can't be removed when wielded or
		worn (without uncursing it). Remove curse will remove this flag.
		</td>
	</tr>
	<tr>
		<td>damage</td>
		<td>@ref liv::dam</td>
		<td>			A disease with a positive &lt;damage&gt; value will strike
			the player for that amount of damage every time the symptoms
			occur.

			A negative &lt;damage&gt; value produces %-based damage:
			"&lt;damage&gt; -10" means the player's health is reduced by
			10% every time the symptoms strike.

			Diseases with %-based damage can be dangerous - but not
			deadly - for players of all levels.
		</td>
	</tr>
	<tr>
		<td>damned</td>
		<td>@ref FLAG_DAMNED</td>
		<td>		Stronger form of curse. Item can't be removed when wielded or
		worn. Remove damnation will remove this flag.
		</td>
	</tr>
	<tr>
		<td>exp. for curing</td>
		<td>@ref liv::exp</td>
		<td>			When the player manages to cure this disease (with a curing
			spell), he is awarded with &lt;exp. for curing&gt;
			experience.
		</td>
	</tr>
	<tr>
		<td>food depletion</td>
		<td>@ref obj::last_eat</td>
		<td>			Every time the disease "moves", the player's food is reduced
			by the value of &lt;food depletion&gt;.

			For negative values, a %-based amount is taken.
		</td>
	</tr>
	<tr>
		<td>glow radius</td>
		<td>@ref obj::glow_radius</td>
		<td>		If &lt;glow radius&gt; is set to a value greater than zero, the
		object appears lit up on dark maps. &lt;glow radius&gt; can be a
		value between 0 and 4, the higher, the more light does the object
		emit.
		</td>
	</tr>
	<tr>
		<td>health regen.</td>
		<td>@ref liv::hp</td>
		<td>			This value increases the player's healing rate. Negative
			values decrease it.
		</td>
	</tr>
	<tr>
		<td>identified</td>
		<td>@ref FLAG_IDENTIFIED</td>
		<td>		If an item is identified, the player has full knowledge about it.
		</td>
	</tr>
	<tr>
		<td>image</td>
		<td>@ref obj::face</td>
		<td>		The image name defines what image is displayed for this object
		in-game.
		</td>
	</tr>
	<tr>
		<td>infect race</td>
		<td>@ref obj::race</td>
		<td>		The disease will only infect creatures of the specified
		&lt;race&gt;.

		"&lt;race&gt; *" means every creature can be infected.
		</td>
	</tr>
	<tr>
		<td>infection range</td>
		<td>@ref obj::magic</td>
		<td>			&lt;Infection range&gt; sets the range at which infection may
			occur. If positive, the &lt;infection range&gt; is level
			dependant - if negative, it is not.

			E.g. "&lt;infection range&gt; -6" means creatures can be
			infected in six square range, and &lt;plague level&gt;
			doesn't modify that.
		</td>
	</tr>
	<tr>
		<td>infectiousness</td>
		<td>@ref liv::wc</td>
		<td>			The &lt;infectiousness&gt; defines the chance of new
			creatures getting infected. If you set this too high, the
			disease is very likely to be too effective.

			&lt;infectiousness&gt; / 127 is the chance of someone in
			range catching it.
		</td>
	</tr>
	<tr>
		<td>inv. system object</td>
		<td>@ref FLAG_SYS_OBJECT</td>
		<td>		Marks an object as system object. System objects are ALWAYS
		invisible and hidden from the players.

		System objects are put in layer 0.
		</td>
	</tr>
	<tr>
		<td>invisible</td>
		<td>@ref FLAG_IS_INVISIBLE</td>
		<td>		Generally makes the object invisible. Invisible objects will be
		shown if the player has "see invisible" (from an item). To hide
		objects totally from detection, use "sys_object".
		</td>
	</tr>
	<tr>
		<td>is animated</td>
		<td>@ref FLAG_ANIMATE</td>
		<td>		If set, the object is animated and animation is used.

		Note: Some special objects will use an animation NOT as animation
		but as frame list. Examples are buttons (which frames are changed
		by the object status of the button). IS_TURNABLE will enable
		direction turning for some object types. These flags are all
		system related. Be VERY careful when changing them.
		</td>
	</tr>
	<tr>
		<td>is turnable</td>
		<td>@ref FLAG_IS_TURNABLE</td>
		<td>		System flag. Object can be turned into directions.
		</td>
	</tr>
	<tr>
		<td>layer</td>
		<td>@ref obj::layer</td>
		<td>		This is the map layer the object will put in. The selected layer
		will affect where and how this object is shown on client side.
		Layer 0 is reserved for sys_object type objects and will NEVER be
		shown on client side. Layer 1 is for floor objects and layer 2
		for floor masks. Layer 3 and 4 are for items on the ground. Layer
		5 is for walls, layer 6 is reserved for players and layer 7 is
		for spell effects and high flying/visible objects like arrows.
		</td>
	</tr>
	<tr>
		<td>magical</td>
		<td>@ref FLAG_IS_MAGICAL</td>
		<td>		If set, this object counts as "magical". Detect magic or identify
		will show this flag and the player will see a small blue M in the
		client's inventory part.
		</td>
	</tr>
	<tr>
		<td>mana depletion</td>
		<td>@ref liv::maxsp</td>
		<td>			Every time the disease "moves", the player's mana is reduced
			by the value of &lt;mana depletion&gt;.

			For negative values, a %-based amount is taken.
		</td>
	</tr>
	<tr>
		<td>mana regen.</td>
		<td>@ref liv::sp</td>
		<td>			This value increases the player's rate of mana regeneration.
			Negative values decrease it.
		</td>
	</tr>
	<tr>
		<td>material</td>
		<td>@ref obj::material_real</td>
		<td>		The material defines the exact material of which the object
		consists. It is much more specific than &lt;material class&gt;,
		however only one material can be selected, not multiple.

		&lt;material&gt; is not required to be set, it can be left
		'undefined'.
		</td>
	</tr>
	<tr>
		<td>material class</td>
		<td>@ref obj::material</td>
		<td>		This bitmask-value informs the player of which basic material(s)
		the object consists. Material class does also affect how likely
		the object can be destroyed by hazardous spell-effects, like
		firestorm.
		</td>
	</tr>
	<tr>
		<td>message</td>
		<td>@ref obj::msg</td>
		<td>		This text is displayed to the player every time the symptoms
		strike.
		</td>
	</tr>
	<tr>
		<td>moving speed</td>
		<td>@ref obj::speed</td>
		<td>			The &lt;speed&gt; of the disease determines how fast the
			disease will "move", thus how fast the symptoms strike the
			host.
		</td>
	</tr>
	<tr>
		<td>name</td>
		<td>@ref obj::name</td>
		<td>		This is the name of the object, displayed to the player.
		</td>
	</tr>
	<tr>
		<td>no prayers</td>
		<td>@ref FLAG_NO_CLERIC</td>
		<td>		If enabled, it is impossible for players to use prayers on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no spells</td>
		<td>@ref FLAG_NO_MAGIC</td>
		<td>		If enabled, it is impossible for players to use spells on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no teleport</td>
		<td>@ref FLAG_NO_TELEPORT</td>
		<td>		Marks an object as no teleport object. A no teleport object can't
		be teleported by teleporter except if the object is inside the
		inventory of another object which can be teleported.
		</td>
	</tr>
	<tr>
		<td>non-pickable</td>
		<td>@ref FLAG_NO_PICK</td>
		<td>		If set, the object cannot be picked up (neither by players nor
		monsters).
		</td>
	</tr>
	<tr>
		<td>number</td>
		<td>@ref obj::nrof</td>
		<td>		This value determines the number of objects in one stack (for
		example: 100 goldcoins =&gt; "number = 100"). You should set this
		at least to one, for any pickable object - otherwise it won't be
		mergeable into a stack.
		</td>
	</tr>
	<tr>
		<td>one drop</td>
		<td>@ref FLAG_ONE_DROP</td>
		<td>		In the moment a player gets or applies this item, it will be
		flagged as godgiven and vanish when dropped to the ground.

		If this flag is set for an item inside monster's quest_container
		with the quest being quest item type, the player will be able to
		find the item again, should he lose it.
		</td>
	</tr>
	<tr>
		<td>permanent cursed</td>
		<td>@ref FLAG_PERM_CURSED</td>
		<td>		The item is permanently cursed. If this flag is set, applying or
		unapplying it will set "cursed 1" again. This flag can't be
		removed by remove curse.
		</td>
	</tr>
	<tr>
		<td>permanent damned</td>
		<td>@ref FLAG_PERM_DAMNED</td>
		<td>		The item is permanently damned. If this flag is set, applying or
		unapplying it will set "damned 1" again. This flag can't be
		removed by remove damnation.
		</td>
	</tr>
	<tr>
		<td>persistence</td>
		<td>@ref liv::maxhp</td>
		<td>			&lt;persistence&gt; defines how long the disease can persist
			outside a host. The disease can "move" &lt;persistence&gt;
			times outside a host before it vanishes. A negative value
			means the disease lasts for permanent (which is only
			recommended to use in maps without monsters).
		</td>
	</tr>
	<tr>
		<td>plague level</td>
		<td>@ref obj::level</td>
		<td>		The &lt;plague level&gt; is proportional to the disease's
		deadliness. This mainly reflects in the &lt;damage&gt;. It has no
		effect on most other symptoms. Neverthless, it is a very
		important value for all damage-inflicting diseases.
		</td>
	</tr>
	<tr>
		<td>player only</td>
		<td>@ref FLAG_PLAYER_ONLY</td>
		<td>		If set, only players can enter the tile the object with this flag
		is on.
		</td>
	</tr>
	<tr>
		<td>progressiveness</td>
		<td>@ref liv::ac</td>
		<td>		Every time the disease "moves" the severity of the symptoms are
		increased by &lt;progressiveness&gt; / 100.

		(severity = 1 + (accumulated progression) / 100)
		</td>
	</tr>
	<tr>
		<td>slowdown</td>
		<td>@ref obj::last_sp</td>
		<td>			If set, the disease imposes a &lt;slowdown&gt; penalty while
			being infected. The player's speed is reduced by
			&lt;slowdown&gt; % of normal value.
		</td>
	</tr>
	<tr>
		<td>start speed</td>
		<td>@ref obj::speed_left</td>
		<td>		When an active object (with 'speed' being non-zero) is put on a
		map, this value is used as counter. Every 'tick', 'speed' (if
		negative, value is turned positive before) is added to this
		value - if it is bigger than 0 the object 'will do something' and
		this counter is decreased with -1.0.

		By default a normal object will be put on the map with start
		speed 0. It 'will do something' with the next coming 'tick'.
		Setting this value to -1.0 will put it on map but wait one full
		'lifetime' round until it does something.

		A 'fire object' should be put on map with start speed 0 - it
		should try to burn something in the moment it comes in the game.
		A bomb for example should be put with speed -1.0 on the map - it
		will stay then on map until the bomb becomes active - it
		explodes.

		The 'lifetime' round is determinated by speed. A speed of 1.0
		will give a 'lifetime' round of 1 tick - a speed of 0.01 100
		ticks.

		Special case: A negative speed value will add to start speed a
		random value between 0.0 to 0.9 . So, a speed of -0.1 with a
		start speed of -1.0 will result in speed 0.1 and start speed
		between -1.0 and -0.1. This is useful to let a row of same
		objects act in different tick ranges.
		</td>
	</tr>
	<tr>
		<td>sub type</td>
		<td>@ref obj::sub_type1</td>
		<td>		This important value is used to define "sub types" for objects of
		the same object type. Examples are weapons, which are all from
		type WEAPON but can be different sub types like slash, cleave,
		two-handed, polearms and so on. This value goes to the client
		too.

		Warning: Not all objects have a sub type and changing it without
		care can corrupt server AND/OR the clients. Normally this is not
		a subject to change outside arch definition.
		</td>
	</tr>
	<tr>
		<td>title</td>
		<td>@ref obj::title</td>
		<td>		This is the object's title. Once an object is identified the
		title is attached to the name. Typical titles are "of Yordan",
		"of xray vision" etc.
		</td>
	</tr>
	<tr>
		<td>unpaid</td>
		<td>@ref FLAG_UNPAID</td>
		<td>		An &lt;unpaid&gt; item cannot be used unless the player carried
		it over a shop mat, paying the demanded price. Setting this flag
		makes sense only for items inside shops.
		</td>
	</tr>
	<tr>
		<td>value</td>
		<td>@ref obj::value</td>
		<td>		Change an object's value.
		</td>
	</tr>
	<tr>
		<td>weight</td>
		<td>@ref obj::weight</td>
		<td>		This value defines the object's weight in gram (1000g is 1kg).
		Objects with zero weight are not pickable for players. Still, set
		the "non-pickable" flag for explicitly non-pickable objects.
		</td>
	</tr>
</table>
*/
