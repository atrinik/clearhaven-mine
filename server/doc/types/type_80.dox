/**
@var MONSTER
See @ref page_type_80
*/

/**
@page page_type_80 Monster &amp; NPC


@section Description
	<![CDATA[
		Monsters can behave in various kinds of ways. They can be
		aggressive, attacking the player. Or peaceful, helping the player
		- maybe joining him as pet.

		The unagressive creatures who communicate with players are
		usually called "NPCs" (Non Player Characters), a well-known term
		in role-playing environments.
	



Type defined by:
- @ref object::type = 80


@section Attributes

<table>
	<tr>
		<th>Attribute</th>
		<th>Field</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>NPC message</td>
		<td>@ref obj::msg</td>
		<td>		This textfield contains the keyword-matching-syntax. The text
		should have the following format:

		"@match &lt;keyword1&gt;|&lt;keyword2&gt;|... ".

		Any number of keywords from one to infinite is allowed. Make sure
		they are seperated by a '|'.

		Examples: "@match yes", "@match gold|treasure". The connected
		value will be triggerd when the player speaks any of the given
		keywords within a two-square radius.

		IMPORTANT: Upper/lower case does not make a difference.
		</td>
	</tr>
	<tr>
		<td>anim speed</td>
		<td>@ref obj::anim_speed</td>
		<td>		How fast to play this animation.
		</td>
	</tr>
	<tr>
		<td>animation</td>
		<td>@ref obj::animation_id</td>
		<td>		The animation-name defines what animation is displayed for this
		object in-game. Note that a set animation will overrule the face.
		</td>
	</tr>
	<tr>
		<td>armour class</td>
		<td>@ref liv::ac</td>
		<td>			Monsters of high &lt;armour class&gt; are less likely to get
			hit from their opponent. &lt;armour class&gt; can be
			considered the "counterpiece" to &lt;weapon class&gt;.

			Values typically range between +20 (quite good) to -20 (very
			bad).

			Note that the monster's level further improves armour class:
			"real armour class" = &lt;armour class&gt; + &lt;level&gt;
		</td>
	</tr>
	<tr>
		<td>asleep</td>
		<td>@ref FLAG_SLEEP</td>
		<td>			Being &lt;asleep&gt;, a monster won't move unless a player
			enters the &lt;sensing range&gt; of the monster. Usually the
			sensing range is larger than the players line of sight.
		</td>
	</tr>
	<tr>
		<td>attack movement type</td>
		<td>@ref obj::attack_move_type</td>
		<td>			Distance attack: Move toward a player if far, but mantain
			some space.
			Run away: Run but attack if player catches up to object.
			Hit and run: Run to then hit player then run away cyclicly.
			Wait and hit: Wait for player to approach then hit, move if
			hit.
			Rush: Rush toward player blindly, similiar to dumb monster.
			Always run: Always run never attack.
			Wait and hit from distance: Attack from a distance if hit.
			Keep distance: Do not try to move towards player if far.
		</td>
	</tr>
	<tr>
		<td>attuned paths</td>
		<td>@ref obj::path_attuned</td>
		<td>			Click on the &lt;attuned paths&gt; button to select
			spellpaths. The creature will get attuned to the specified
			spellpaths.
		</td>
	</tr>
	<tr>
		<td>block view</td>
		<td>@ref FLAG_BLOCKSVIEW</td>
		<td>		If an item is set to block view, players (and monsters) cannot
		see beyond it unless they cross it or manage to stand on top of
		it.
		</td>
	</tr>
	<tr>
		<td>breed monster</td>
		<td>@ref obj::other_arch</td>
		<td>		This only takes effect if &lt;multiply&gt; or &lt;splits&gt; is
		enabled. The monster will create a &lt;breed monster&gt; every
		once in a while. &lt;breed monster&gt; can be set to any valid
		arch-name of a monster.
		</td>
	</tr>
	<tr>
		<td>can cast spell</td>
		<td>@ref FLAG_CAST_SPELL</td>
		<td>			If &lt;can cast spell&gt; is disabled, the monster cannot
			cast any spell. Only wands/rods/etc can be used, given the
			appropriate abilities.
		</td>
	</tr>
	<tr>
		<td>can move on</td>
		<td>@ref obj::terrain_flag</td>
		<td>			These settings define on which kind of terrain this creature
			can move. If nothing is set, the creature can walk on land
			surface.
		</td>
	</tr>
	<tr>
		<td>can reflect missiles</td>
		<td>@ref FLAG_CAN_REFL_MISSILE</td>
		<td>		Object can reflect missiles. See reflect missiles.
		</td>
	</tr>
	<tr>
		<td>can reflect spells</td>
		<td>@ref FLAG_CAN_REFL_SPELL</td>
		<td>		Object can reflect spells. See reflect spells.
		</td>
	</tr>
	<tr>
		<td>can use armour</td>
		<td>@ref FLAG_USE_ARMOUR</td>
		<td>			The monster will look for an armour to use.
		</td>
	</tr>
	<tr>
		<td>can use bows</td>
		<td>@ref FLAG_USE_BOW</td>
		<td>			The monster will look for an usable bow in its inventory, in
			order to fire arrows/bolts/stones/etc.
		</td>
	</tr>
	<tr>
		<td>can use rings</td>
		<td>@ref FLAG_USE_RING</td>
		<td>			The monster will look for rings to use.
		</td>
	</tr>
	<tr>
		<td>can use rods/wands</td>
		<td>@ref FLAG_USE_RANGE</td>
		<td>			If set, this creature can use range weapons like
			rods, wands, staves and horns.
		</td>
	</tr>
	<tr>
		<td>can use scrolls</td>
		<td>@ref FLAG_USE_SCROLL</td>
		<td>			The monster will use scrolls.
		</td>
	</tr>
	<tr>
		<td>can use skills</td>
		<td>@ref FLAG_CAN_USE_SKILL</td>
		<td>			The monster can use skills.
		</td>
	</tr>
	<tr>
		<td>can use weapons</td>
		<td>@ref FLAG_USE_WEAPON</td>
		<td>			The monster will look for an usable weapon in its inventory,
			to improve its damage.
		</td>
	</tr>
	<tr>
		<td>carries weight</td>
		<td>@ref obj::carrying</td>
		<td>		If a monster has something in the inventory, this value can be
		set to reflect the slowdown due to the carried weight.
		</td>
	</tr>
	<tr>
		<td>casting delay</td>
		<td>@ref obj::magic</td>
		<td>			The casting delay this monster invokes every cast. This is
			cumulatively added to the spell's default casting delay.
		</td>
	</tr>
	<tr>
		<td>corpse</td>
		<td>@ref FLAG_CORPSE</td>
		<td>		This monster will leave a corpse behind when it dies.
		</td>
	</tr>
	<tr>
		<td>cursed</td>
		<td>@ref FLAG_CURSED</td>
		<td>		The item is cursed. This object can't be removed when wielded or
		worn (without uncursing it). Remove curse will remove this flag.
		</td>
	</tr>
	<tr>
		<td>damage</td>
		<td>@ref liv::dam</td>
		<td>			A value of 50 will be handled as 5.0, a value of 55 =
			5.5. Amongst other parameters, &lt;damage&gt; affects how
			much melee damage a monster inflicts. &lt;damage&gt; is used
			as base value for damage per hit. &lt;level&gt;,
			&lt;speed&gt;, &lt;weapon class&gt; and resistances also take
			effect on the melee damage of a monster.
		</td>
	</tr>
	<tr>
		<td>damned</td>
		<td>@ref FLAG_DAMNED</td>
		<td>		Stronger form of curse. Item can't be removed when wielded or
		worn. Remove damnation will remove this flag.
		</td>
	</tr>
	<tr>
		<td>denied paths</td>
		<td>@ref obj::path_denied</td>
		<td>			Click on the &lt;denied paths&gt; button to select
			spellpaths. The creature won't be able to cast spells of the
			specified paths.
		</td>
	</tr>
	<tr>
		<td>experience</td>
		<td>@ref liv::exp</td>
		<td>		When a player kills this monster, he will get this amount of
		&lt;experience&gt;, with various adjustments, like what level the
		monster was. The experience will flow into the skill category the
		player used for the kill.
		</td>
	</tr>
	<tr>
		<td>female</td>
		<td>@ref FLAG_IS_FEMALE</td>
		<td>		This monster is female. You can create male, female and neuter
		monsters.
		</td>
	</tr>
	<tr>
		<td>flying</td>
		<td>@ref FLAG_FLYING</td>
		<td>		Flying monsters won't get slowed down in rough terrain and they
		won't be affected by movers.
		</td>
	</tr>
	<tr>
		<td>friendly</td>
		<td>@ref FLAG_FRIENDLY</td>
		<td>			&lt;friendly&gt; monsters help the player, attacking any non-
			friendly monsters in range.
		</td>
	</tr>
	<tr>
		<td>glow radius</td>
		<td>@ref obj::glow_radius</td>
		<td>		If &lt;glow radius&gt; is set to a value greater than zero, the
		object appears lit up on dark maps. &lt;glow radius&gt; can be a
		value between 0 and 4, the higher, the more light does the object
		emit.
		</td>
	</tr>
	<tr>
		<td>healing rate</td>
		<td>@ref liv::Con</td>
		<td>			Monster regenerates this many hit points each move. Each time
			the monster has a move, it gets &lt;healing rate&gt; health
			points back. Hence, &lt;movement speed&gt; has great effect
			on the monster's healing rate as well.
		</td>
	</tr>
	<tr>
		<td>health points</td>
		<td>@ref liv::hp</td>
		<td>			The &lt;health points&gt; of a monster define how long it
			takes to kill it. With every successful hit from an opponent,
			health points get drained - the monster dies by zero health
			points.

			If the value '-1' is set, the monster will start out with
			full health. How much that is depends on &lt;max health&gt;.
		</td>
	</tr>
	<tr>
		<td>hitback</td>
		<td>@ref FLAG_HITBACK</td>
		<td>			Monsters with &lt;hitback&gt; enabled hurt the attacker in
			proportion to the amount of damage the *attacker* inflicted.
			This damage is additional to the regular melee damage of the
			monster.
		</td>
	</tr>
	<tr>
		<td>image</td>
		<td>@ref obj::face</td>
		<td>		The image name defines what image is displayed for this object
		in-game.
		</td>
	</tr>
	<tr>
		<td>inv. system object</td>
		<td>@ref FLAG_SYS_OBJECT</td>
		<td>		Marks an object as system object. System objects are ALWAYS
		invisible and hidden from the players.

		System objects are put in layer 0.
		</td>
	</tr>
	<tr>
		<td>invisible</td>
		<td>@ref FLAG_IS_INVISIBLE</td>
		<td>		Generally makes the object invisible. Invisible objects will be
		shown if the player has "see invisible" (from an item). To hide
		objects totally from detection, use "sys_object".
		</td>
	</tr>
	<tr>
		<td>invulnerable</td>
		<td>@ref FLAG_INVULNERABLE</td>
		<td>		This mob will never take any damage - so it can't die by damage.
		</td>
	</tr>
	<tr>
		<td>is animated</td>
		<td>@ref FLAG_ANIMATE</td>
		<td>		If set, the object is animated and animation is used.

		Note: Some special objects will use an animation NOT as animation
		but as frame list. Examples are buttons (which frames are changed
		by the object status of the button). IS_TURNABLE will enable
		direction turning for some object types. These flags are all
		system related. Be VERY careful when changing them.
		</td>
	</tr>
	<tr>
		<td>is turnable</td>
		<td>@ref FLAG_IS_TURNABLE</td>
		<td>		System flag. Object can be turned into directions.
		</td>
	</tr>
	<tr>
		<td>layer</td>
		<td>@ref obj::layer</td>
		<td>		This is the map layer the object will put in. The selected layer
		will affect where and how this object is shown on client side.
		Layer 0 is reserved for sys_object type objects and will NEVER be
		shown on client side. Layer 1 is for floor objects and layer 2
		for floor masks. Layer 3 and 4 are for items on the ground. Layer
		5 is for walls, layer 6 is reserved for players and layer 7 is
		for spell effects and high flying/visible objects like arrows.
		</td>
	</tr>
	<tr>
		<td>level</td>
		<td>@ref obj::level</td>
		<td>		A monster's &lt;level&gt; is the most important attribute.
		&lt;level&gt; affects the power of a monster in various ways,
		and also how much experience the player gains for killing the
		monster.
		</td>
	</tr>
	<tr>
		<td>magical</td>
		<td>@ref FLAG_IS_MAGICAL</td>
		<td>		If set, this object counts as "magical". Detect magic or identify
		will show this flag and the player will see a small blue M in the
		client's inventory part.
		</td>
	</tr>
	<tr>
		<td>male</td>
		<td>@ref FLAG_IS_MALE</td>
		<td>		This monster is male. You can create male, female and neuter
		monsters.
		</td>
	</tr>
	<tr>
		<td>max health</td>
		<td>@ref liv::maxhp</td>
		<td>			&lt;max health&gt; is the maximum amount of
			&lt;health points&gt; this monster can have.
		</td>
	</tr>
	<tr>
		<td>max spellpoints</td>
		<td>@ref liv::maxsp</td>
		<td>			&lt;max spellpoints&gt; is the maximum number of spellpoints
			a monster can hold. Setting this to high values has little
			effect unless the monster has a decent
			&lt;spellpoint regen.&gt;, or the spell "regenerate mana" at it's disposal.
		</td>
	</tr>
	<tr>
		<td>misc. actions</td>
		<td>@ref obj::will_apply</td>
		<td>			This entry defines what kind of environment actions the
			creature is able to perform.
		</td>
	</tr>
	<tr>
		<td>movement type</td>
		<td>@ref obj::move_type</td>
		<td>			Pet movement: The monster does pet movement.
			Small circle: Will move in a circle until it is attacked.
			Large circle: Same as small circle, but a larger circle is
			used.
			Short horizontal pace: Will pace back and forth until
			attacked.
			Long horizontal pace: Like short one, but the length of the
			horizontal pace area is longer.
			Random direction: Will go in a random direction.
			Random walk: Constantly move in a different random direction.
			Short vertical pace: Like short horizontal pace, but vertical
			instead.
			Long vertical pace: Like short one, but the length of the
			vertical pace area is longer.
			Use waypoints: The monster uses waypoints, if it has any.
		</td>
	</tr>
	<tr>
		<td>multiply</td>
		<td>@ref FLAG_GENERATOR</td>
		<td>		Monsters with &lt;multiply&gt; enabled will create a
		&lt;breed monster&gt; every once in a while. If enabled, you must
		also set &lt;breed monster&gt;.
		</td>
	</tr>
	<tr>
		<td>name</td>
		<td>@ref obj::name</td>
		<td>		This is the name of the object, displayed to the player.
		</td>
	</tr>
	<tr>
		<td>never attack</td>
		<td>@ref FLAG_NO_ATTACK</td>
		<td>		This mob will never attack or fight back.
		</td>
	</tr>
	<tr>
		<td>no prayers</td>
		<td>@ref FLAG_NO_CLERIC</td>
		<td>		If enabled, it is impossible for players to use prayers on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no spells</td>
		<td>@ref FLAG_NO_MAGIC</td>
		<td>		If enabled, it is impossible for players to use spells on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no teleport</td>
		<td>@ref FLAG_NO_TELEPORT</td>
		<td>		Marks an object as no teleport object. A no teleport object can't
		be teleported by teleporter except if the object is inside the
		inventory of another object which can be teleported.
		</td>
	</tr>
	<tr>
		<td>non-pickable</td>
		<td>@ref FLAG_NO_PICK</td>
		<td>		If set, the object cannot be picked up (neither by players nor
		monsters).
		</td>
	</tr>
	<tr>
		<td>one drop</td>
		<td>@ref FLAG_ONE_DROP</td>
		<td>		In the moment a player gets or applies this item, it will be
		flagged as godgiven and vanish when dropped to the ground.

		If this flag is set for an item inside monster's quest_container
		with the quest being quest item type, the player will be able to
		find the item again, should he lose it.
		</td>
	</tr>
	<tr>
		<td>one hit only</td>
		<td>@ref FLAG_ONE_HIT</td>
		<td>			Monsters with &lt;one hit only&gt; dissapear after one
			successful hit to a player.
		</td>
	</tr>
	<tr>
		<td>pass blocked tiles</td>
		<td>@ref FLAG_CAN_PASS_THRU</td>
		<td>			If no_pass (blocking passage) is set for an object, no one can
			pass the tile it is on (true for walls or closed doors). But
			if this flag is set, the monster can pass through all no_pass
			objects which have pass_thru set.

			This is used for example for ghosts who move through doors.
		</td>
	</tr>
	<tr>
		<td>permanent cursed</td>
		<td>@ref FLAG_PERM_CURSED</td>
		<td>		The item is permanently cursed. If this flag is set, applying or
		unapplying it will set "cursed 1" again. This flag can't be
		removed by remove curse.
		</td>
	</tr>
	<tr>
		<td>permanent damned</td>
		<td>@ref FLAG_PERM_DAMNED</td>
		<td>		The item is permanently damned. If this flag is set, applying or
		unapplying it will set "damned 1" again. This flag can't be
		removed by remove damnation.
		</td>
	</tr>
	<tr>
		<td>pick up</td>
		<td>@ref obj::pick_up</td>
		<td>			Click on the &lt;pick up&gt; button and select which types of
			objects the creature should try to pick up.

			Note also that if &lt;can use armor&gt;,
			&lt;can use weapon&gt;, &lt;can use ring&gt; etc etc are set,
			then the creature will pick up the matching items even if
			this is not set here.
		</td>
	</tr>
	<tr>
		<td>player only</td>
		<td>@ref FLAG_PLAYER_ONLY</td>
		<td>		If set, only players can enter the tile the object with this flag
		is on.
		</td>
	</tr>
	<tr>
		<td>race</td>
		<td>@ref obj::race</td>
		<td>		Every monster should have a race set to categorize it. The
		monster's &lt;race&gt; can have different effects: Slaying
		weapons inflict triple damage against enemy races and holy word
		kills only enemy races of the god.
		</td>
	</tr>
	<tr>
		<td>random move range X</td>
		<td>@ref obj::item_race</td>
		<td>			If random_move is set, this determines value of X position
			the creatures can move away from the spawn point (if it has
			one).
		</td>
	</tr>
	<tr>
		<td>random move range Y</td>
		<td>@ref obj::item_level</td>
		<td>			If random_move is set, this determines value of Y position
			the creatures can move away from the spawn point (if it has
			one).
		</td>
	</tr>
	<tr>
		<td>random movement</td>
		<td>@ref FLAG_RANDOM_MOVE</td>
		<td>			Monsters with this flag enabled move around at random.
		</td>
	</tr>
	<tr>
		<td>repelled paths</td>
		<td>@ref obj::path_repelled</td>
		<td>			Click on the &lt;repelled paths&gt; button to select
			spellpaths. The creature will get repelled to the specified
			spellpaths.
		</td>
	</tr>
	<tr>
		<td>run at % health</td>
		<td>@ref obj::run_away</td>
		<td>			This is a percentage based value in the range 0-100. The
			creature will attempt to run from the attacker when it's
			health points drops below this percentage of max health.
		</td>
	</tr>
	<tr>
		<td>see in darkness</td>
		<td>@ref FLAG_SEE_IN_DARK</td>
		<td>			A monster with the ability to &lt;see in darkness&gt; cannot
			be fooled by spells of darkness or dark maps. This flag is a
			"should-have" for high-level monsters. When a monster is
			unable to see in darkness, players can cast darkness and
			sneak around it safely.
		</td>
	</tr>
	<tr>
		<td>see invisible</td>
		<td>@ref FLAG_SEE_INVISIBLE</td>
		<td>			A monster with the ability to &lt;see invisible&gt; cannot be
			fooled with by invisible or hiding players. This flag is a
			must-have for high-level monsters. When a monster is unable
			to detect invisible players, it can be killed without
			fighting back.
		</td>
	</tr>
	<tr>
		<td>sensing range</td>
		<td>@ref liv::Wis</td>
		<td>			&lt;sensing range&gt; determines how close a player needs to
			be before the creature notices him. This is done as a square,
			for reasons of speed. If the player has stealth, the size of
			this square is reduced in half plus 1.
		</td>
	</tr>
	<tr>
		<td>speed</td>
		<td>@ref obj::speed</td>
		<td>		The &lt;speed&gt; determines how fast a monster will both move
		and fight. High &lt;speed&gt; makes a monster considerably
		stronger. If the start value is negative (like -0.1) then the
		speed is set to 0.1 but the speed counter becomes a random start
		value.
		</td>
	</tr>
	<tr>
		<td>spellpoint regen.</td>
		<td>@ref liv::Pow</td>
		<td>			Monsters regenerate this many spellpoints each move. Each
			time the monster has a move, it gets
			&lt;spellpoint regen.&gt; spellpoints back. Hence,
			&lt;movement speed&gt; has great effect on the monster's
			spellpoint regeneration as well.

			To make a really tough spellcasting monster, the rate of
			spellpoint regeneration is most important.
		</td>
	</tr>
	<tr>
		<td>spellpoints</td>
		<td>@ref liv::sp</td>
		<td>			Like players, monsters need &lt;spellpoints&gt; to do magic.
			Monsters use them for both spells and prayers. However, this
			value defines only the amount of *initial* spellpoints the
			monster starts with.

			When creating a spellcasting monster, remember that
			&lt;max spellpoints&gt; and &lt;spellpoint regen.&gt; are
			more important.

			If &lt;spelloints&gt; are set to '-1', the monster will start
			out with maxed spellpoints.
		</td>
	</tr>
	<tr>
		<td>split</td>
		<td>@ref FLAG_SPLITTING</td>
		<td>		Monsters with &lt;split&gt; enabled will split into one or more
		&lt;breed monster&gt; whenever they're hit. The number of new
		monsters is controlled by &lt;split number&gt;. If enabled, you
		must also set &lt;breed monster&gt; and &lt;split number&gt;.
		</td>
	</tr>
	<tr>
		<td>split number</td>
		<td>@ref liv::food</td>
		<td>		This is the number of new monsters generated when this monster is
		split. This only takes effect if &lt;split&gt; and
		&lt;breed monster&gt; are set.
		</td>
	</tr>
	<tr>
		<td>stand still</td>
		<td>@ref FLAG_STAND_STILL</td>
		<td>			Monsters which &lt;stand still&gt; won't move to leave their
			position. When agressive, they will attack all enemies who
			get close to them. This behaviour is commonly known from
			castle guards.

			When lining up &lt;stand still&gt;-monster in order to
			"defend" something: Be aware that such monsters are rather
			easy to kill. It's good for low level maps, but not much
			more.
		</td>
	</tr>
	<tr>
		<td>start speed</td>
		<td>@ref obj::speed_left</td>
		<td>		When an active object (with 'speed' being non-zero) is put on a
		map, this value is used as counter. Every 'tick', 'speed' (if
		negative, value is turned positive before) is added to this
		value - if it is bigger than 0 the object 'will do something' and
		this counter is decreased with -1.0.

		By default a normal object will be put on the map with start
		speed 0. It 'will do something' with the next coming 'tick'.
		Setting this value to -1.0 will put it on map but wait one full
		'lifetime' round until it does something.

		A 'fire object' should be put on map with start speed 0 - it
		should try to burn something in the moment it comes in the game.
		A bomb for example should be put with speed -1.0 on the map - it
		will stay then on map until the bomb becomes active - it
		explodes.

		The 'lifetime' round is determinated by speed. A speed of 1.0
		will give a 'lifetime' round of 1 tick - a speed of 0.01 100
		ticks.

		Special case: A negative speed value will add to start speed a
		random value between 0.0 to 0.9 . So, a speed of -0.1 with a
		start speed of -1.0 will result in speed 0.1 and start speed
		between -1.0 and -0.1. This is useful to let a row of same
		objects act in different tick ranges.
		</td>
	</tr>
	<tr>
		<td>sub type</td>
		<td>@ref obj::sub_type1</td>
		<td>		This important value is used to define "sub types" for objects of
		the same object type. Examples are weapons, which are all from
		type WEAPON but can be different sub types like slash, cleave,
		two-handed, polearms and so on. This value goes to the client
		too.

		Warning: Not all objects have a sub type and changing it without
		care can corrupt server AND/OR the clients. Normally this is not
		a subject to change outside arch definition.
		</td>
	</tr>
	<tr>
		<td>title</td>
		<td>@ref obj::title</td>
		<td>		This is the object's title. Once an object is identified the
		title is attached to the name. Typical titles are "of Yordan",
		"of xray vision" etc.
		</td>
	</tr>
	<tr>
		<td>treasurelist</td>
		<td>@ref obj::randomitems</td>
		<td>		When the monster is killed, items from the treasurelist will drop
		to the ground. This is a common way to reward players for killing
		(masses of) monsters.

		Note that you can always put items into the monster's inventory.
		Those will drop-at-kill just like the stuff from the
		&lt;treasurelist&gt;.
		</td>
	</tr>
	<tr>
		<td>unaggressive</td>
		<td>@ref FLAG_UNAGGRESSIVE</td>
		<td>			&lt;unaggressive&gt; monsters do not attack players unless
			attacked first.
		</td>
	</tr>
	<tr>
		<td>undead</td>
		<td>@ref FLAG_UNDEAD</td>
		<td>		Several spells only affect undead monsters: turn undead, banish
		undead, holy word, etc.
		</td>
	</tr>
	<tr>
		<td>use ability 1/</td>
		<td>@ref liv::Dex</td>
		<td>			The &lt;use ability&gt; value is a 1/x chance that the
			monster *tries* to use per active tick a special ability like
			spellcasting, throwing, etc.
		</td>
	</tr>
	<tr>
		<td>wc hit range</td>
		<td>@ref liv::wc_range</td>
		<td>			This value is set to 20 from the server when if 0. This is
			for the weapon class of ranged attacks, like arrows. The
			server will add a random value between 0 ad wc_range to the
			wc.

			If that is higher than the target's ac, the target is hit.
			The higher wc_range is 20, the more dangerous and more often
			a mob will hit.

			Because the mobile level is added to wc too, a wc_range of 40
			will let the monster hit VERY often even against the best
			armours.
		</td>
	</tr>
	<tr>
		<td>weapon class</td>
		<td>@ref liv::wc</td>
		<td>			Monsters of high &lt;weapon class&gt; are more likely to
			really hit their opponent. &lt;weapon class&gt; can be
			considered the "counterpiece" to &lt;armour class&gt;.

			Note that the monster's level further improves weapon class:
			"real weapon class" = &lt;weapon class&gt; + &lt;level&gt;
		</td>
	</tr>
	<tr>
		<td>weight</td>
		<td>@ref obj::weight</td>
		<td>		This value defines the object's weight in gram (1000g is 1kg).
		Objects with zero weight are not pickable for players. Still, set
		the "non-pickable" flag for explicitly non-pickable objects.
		</td>
	</tr>
</table>
*/
