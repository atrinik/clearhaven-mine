/**
@var ABILITY
See @ref page_type_110
*/

/**
@page page_type_110 Ability


@section Description
	<![CDATA[
		Abilities are to be put in a monster's inventory. They grant
		monsters the knowledge to cast spells. Spells from abilities are
		usually magical in nature, thus adding magic to the spell damage
		they produce. If not marked as magical, the ability as natural
		effect can't be disenchanted or blocked by dispel magic.
		<br><br>
		A particularly nice feature of abilities is that they can hold
		two spells: One for short range and one for long range use.
	



Type defined by:
- @ref object::type = 110


@section Attributes

<table>
	<tr>
		<th>Attribute</th>
		<th>Field</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>anim speed</td>
		<td>@ref obj::anim_speed</td>
		<td>		How fast to play this animation.
		</td>
	</tr>
	<tr>
		<td>animation</td>
		<td>@ref obj::animation_id</td>
		<td>		The animation-name defines what animation is displayed for this
		object in-game. Note that a set animation will overrule the face.
		</td>
	</tr>
	<tr>
		<td>block view</td>
		<td>@ref FLAG_BLOCKSVIEW</td>
		<td>		If an item is set to block view, players (and monsters) cannot
		see beyond it unless they cross it or manage to stand on top of
		it.
		</td>
	</tr>
	<tr>
		<td>can reflect missiles</td>
		<td>@ref FLAG_CAN_REFL_MISSILE</td>
		<td>		Object can reflect missiles. See reflect missiles.
		</td>
	</tr>
	<tr>
		<td>can reflect spells</td>
		<td>@ref FLAG_CAN_REFL_SPELL</td>
		<td>		Object can reflect spells. See reflect spells.
		</td>
	</tr>
	<tr>
		<td>casting delay</td>
		<td>@ref obj::last_grace</td>
		<td>		The casting delay this spell/ability invokes to a monster using
		it. This is cumulatively added to the monster's default casting
		delay.
		</td>
	</tr>
	<tr>
		<td>direction</td>
		<td>@ref obj::direction</td>
		<td>		The object's direction.
		</td>
	</tr>
	<tr>
		<td>glow radius</td>
		<td>@ref obj::glow_radius</td>
		<td>		If &lt;glow radius&gt; is set to a value greater than zero, the
		object appears lit up on dark maps. &lt;glow radius&gt; can be a
		value between 0 and 4, the higher, the more light does the object
		emit.
		</td>
	</tr>
	<tr>
		<td>identified</td>
		<td>@ref FLAG_IDENTIFIED</td>
		<td>		If an item is identified, the player has full knowledge about it.
		</td>
	</tr>
	<tr>
		<td>image</td>
		<td>@ref obj::face</td>
		<td>		The image name defines what image is displayed for this object
		in-game.
		</td>
	</tr>
	<tr>
		<td>importance</td>
		<td>@ref liv::maxsp</td>
		<td>		Sometimes you'll want a monster to use one ability more than
		others. To achieve this, set the &lt;importance&gt; to a value
		greater than one. Abilities with this value zero/unset are
		counted to be of &lt;importance&gt; one.

		Example: A monster with "firestorm" of &lt;importance&gt; 3 and
		"magic bullet" of &lt;importance&gt; 1 will averagely cast three
		out of four times the "firestorm".
		</td>
	</tr>
	<tr>
		<td>inv. system object</td>
		<td>@ref FLAG_SYS_OBJECT</td>
		<td>		Marks an object as system object. System objects are ALWAYS
		invisible and hidden from the players.

		System objects are put in layer 0.
		</td>
	</tr>
	<tr>
		<td>invisible</td>
		<td>@ref FLAG_IS_INVISIBLE</td>
		<td>		Generally makes the object invisible. Invisible objects will be
		shown if the player has "see invisible" (from an item). To hide
		objects totally from detection, use "sys_object".
		</td>
	</tr>
	<tr>
		<td>is animated</td>
		<td>@ref FLAG_ANIMATE</td>
		<td>		If set, the object is animated and animation is used.

		Note: Some special objects will use an animation NOT as animation
		but as frame list. Examples are buttons (which frames are changed
		by the object status of the button). IS_TURNABLE will enable
		direction turning for some object types. These flags are all
		system related. Be VERY careful when changing them.
		</td>
	</tr>
	<tr>
		<td>is magical</td>
		<td>@ref FLAG_IS_MAGICAL</td>
		<td>		This flag specifies whether the ability &lt;is magical&gt; in
		nature. If enabled, all spells produced by this ability will have
		magic attacktype added to the usual attacktypes.

		This should always be set for spell-like abilities. "Natural"
		abilities like a dragon's firebreath are an exception. Note that
		non-magical abilities are more dangerous because magic resistance
		does not protect from those.
		</td>
	</tr>
	<tr>
		<td>is turnable</td>
		<td>@ref FLAG_IS_TURNABLE</td>
		<td>		System flag. Object can be turned into directions.
		</td>
	</tr>
	<tr>
		<td>layer</td>
		<td>@ref obj::layer</td>
		<td>		This is the map layer the object will put in. The selected layer
		will affect where and how this object is shown on client side.
		Layer 0 is reserved for sys_object type objects and will NEVER be
		shown on client side. Layer 1 is for floor objects and layer 2
		for floor masks. Layer 3 and 4 are for items on the ground. Layer
		5 is for walls, layer 6 is reserved for players and layer 7 is
		for spell effects and high flying/visible objects like arrows.
		</td>
	</tr>
	<tr>
		<td>long range spell</td>
		<td>@ref liv::hp</td>
		<td>		The monster will use the specified &lt;long range spell&gt; when
		the player is at least 6 squares away (from the monster's head).

		Setting a &lt;long range spell&gt; is optional. If unset, the
		&lt;short range spell&gt; gets used all the time.
		</td>
	</tr>
	<tr>
		<td>material</td>
		<td>@ref obj::material_real</td>
		<td>		The material defines the exact material of which the object
		consists. It is much more specific than &lt;material class&gt;,
		however only one material can be selected, not multiple.

		&lt;material&gt; is not required to be set, it can be left
		'undefined'.
		</td>
	</tr>
	<tr>
		<td>material class</td>
		<td>@ref obj::material</td>
		<td>		This bitmask-value informs the player of which basic material(s)
		the object consists. Material class does also affect how likely
		the object can be destroyed by hazardous spell-effects, like
		firestorm.
		</td>
	</tr>
	<tr>
		<td>name</td>
		<td>@ref obj::name</td>
		<td>		This is the name of the object, displayed to the player.
		</td>
	</tr>
	<tr>
		<td>no prayers</td>
		<td>@ref FLAG_NO_CLERIC</td>
		<td>		If enabled, it is impossible for players to use prayers on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no spells</td>
		<td>@ref FLAG_NO_MAGIC</td>
		<td>		If enabled, it is impossible for players to use spells on that
		spot.
		</td>
	</tr>
	<tr>
		<td>no teleport</td>
		<td>@ref FLAG_NO_TELEPORT</td>
		<td>		Marks an object as no teleport object. A no teleport object can't
		be teleported by teleporter except if the object is inside the
		inventory of another object which can be teleported.
		</td>
	</tr>
	<tr>
		<td>non-pickable</td>
		<td>@ref FLAG_NO_PICK</td>
		<td>		If set, the object cannot be picked up (neither by players nor
		monsters).
		</td>
	</tr>
	<tr>
		<td>number</td>
		<td>@ref obj::nrof</td>
		<td>		This value determines the number of objects in one stack (for
		example: 100 goldcoins =&gt; "number = 100"). You should set this
		at least to one, for any pickable object - otherwise it won't be
		mergeable into a stack.
		</td>
	</tr>
	<tr>
		<td>one drop</td>
		<td>@ref FLAG_ONE_DROP</td>
		<td>		In the moment a player gets or applies this item, it will be
		flagged as godgiven and vanish when dropped to the ground.

		If this flag is set for an item inside monster's quest_container
		with the quest being quest item type, the player will be able to
		find the item again, should he lose it.
		</td>
	</tr>
	<tr>
		<td>permanent cursed</td>
		<td>@ref FLAG_PERM_CURSED</td>
		<td>		The item is permanently cursed. If this flag is set, applying or
		unapplying it will set "cursed 1" again. This flag can't be
		removed by remove curse.
		</td>
	</tr>
	<tr>
		<td>permanent damned</td>
		<td>@ref FLAG_PERM_DAMNED</td>
		<td>		The item is permanently damned. If this flag is set, applying or
		unapplying it will set "damned 1" again. This flag can't be
		removed by remove damnation.
		</td>
	</tr>
	<tr>
		<td>player only</td>
		<td>@ref FLAG_PLAYER_ONLY</td>
		<td>		If set, only players can enter the tile the object with this flag
		is on.
		</td>
	</tr>
	<tr>
		<td>short range spell</td>
		<td>@ref liv::sp</td>
		<td>		The monster will use the specified &lt;short range spell&gt; when
		the player is within 6-square radius (of the monster's head).
		</td>
	</tr>
	<tr>
		<td>stackable</td>
		<td>@ref FLAG_CAN_STACK</td>
		<td>		If set, the item can be stacked. Careful, don't use on rings or
		other applyable items, it will lead to side effects.

		Missiles are designed to be used as stacks for example.
		</td>
	</tr>
	<tr>
		<td>sub type</td>
		<td>@ref obj::sub_type1</td>
		<td>		This important value is used to define "sub types" for objects of
		the same object type. Examples are weapons, which are all from
		type WEAPON but can be different sub types like slash, cleave,
		two-handed, polearms and so on. This value goes to the client
		too.

		Warning: Not all objects have a sub type and changing it without
		care can corrupt server AND/OR the clients. Normally this is not
		a subject to change outside arch definition.
		</td>
	</tr>
	<tr>
		<td>title</td>
		<td>@ref obj::title</td>
		<td>		This is the object's title. Once an object is identified the
		title is attached to the name. Typical titles are "of Yordan",
		"of xray vision" etc.
		</td>
	</tr>
	<tr>
		<td>unpaid</td>
		<td>@ref FLAG_UNPAID</td>
		<td>		An &lt;unpaid&gt; item cannot be used unless the player carried
		it over a shop mat, paying the demanded price. Setting this flag
		makes sense only for items inside shops.
		</td>
	</tr>
	<tr>
		<td>value</td>
		<td>@ref obj::value</td>
		<td>		Change an object's value.
		</td>
	</tr>
	<tr>
		<td>weight</td>
		<td>@ref obj::weight</td>
		<td>		This value defines the object's weight in gram (1000g is 1kg).
		Objects with zero weight are not pickable for players. Still, set
		the "non-pickable" flag for explicitly non-pickable objects.
		</td>
	</tr>
</table>
*/
