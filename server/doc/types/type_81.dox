/**
@var SPAWN_POINT
See @ref page_type_81
*/

/**
@page page_type_81 Spawn Point


@section Description
    Spawn points are used to spawn monsters.
    After the spawn point is set, one or more
    mobs can be added to the spawn points inventory.
    By changing the monster type from MONSTER to
    SPAWN POINT MOB, the mob will used as prototyp
    for a spawn. The map maker can set some options,
    like chance to spawn. Is a spawn monster is generate
    and then slain, the spawn point will try to generate
    another one. 



Type defined by:
- @ref object::type = 81


@section Attributes

<table>
	<tr>
		<th>Attribute</th>
		<th>Field</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>anim speed</td>
		<td>@ref obj::anim_speed</td>
		<td>    How fast to play this animation.
		</td>
	</tr>
	<tr>
		<td>animation</td>
		<td>@ref obj::animation</td>
		<td>    The animation-name defines what animation is displayed for this object
    in-game. Note that a set animation will overrule the face.
    Changing animation is easy - adding or deleting an animation is more
    difficult and should be done in the text parse window and not in this
    dialog.
		</td>
	</tr>
	<tr>
		<td>block view</td>
		<td>@ref FLAG_BLOCKSVIEW</td>
		<td>    If an item is set to block view, players (and monsters) cannot
    see beyond it unless they cross it or manage to stand on top of it.
		</td>
	</tr>
	<tr>
		<td>can reflect missiles</td>
		<td>@ref FLAG_CAN_REFL_MISSILE</td>
		<td>    Object CAN reflect missiles. See reflect missiles.
		</td>
	</tr>
	<tr>
		<td>can reflect spells</td>
		<td>@ref FLAG_CAN_REFL_SPELL</td>
		<td>    Object CAN reflect spells. See reflect spells.
		</td>
	</tr>
	<tr>
		<td>cursed</td>
		<td>@ref FLAG_CURSED</td>
		<td>    The item is cursed. This object can't be removed when
    wielded or worn (without uncursing it). Remove curse will
    remove this flag.
		</td>
	</tr>
	<tr>
		<td>damned</td>
		<td>@ref FLAG_DAMNED</td>
		<td>    Stronger form of curse. Item can't be removed when
    wielded or worn. Remove damnation will remove this flag.
		</td>
	</tr>
	<tr>
		<td>forced spawn</td>
		<td>@ref liv::sp</td>
		<td>    If -1 at start, the spawn point will do a normal spawn.
    If set to 0-9999, the spawn point will be forced to spawn
    the mob with the nearest set chance (lower or same value)
    ONE TIME when the spawn point is called the first time.
    See SPAWN POINT MOB objects for more information.
		</td>
	</tr>
	<tr>
		<td>glow radius</td>
		<td>@ref obj::glow_radius</td>
		<td>    If &lt;glow radius&gt; is set to a value greater than zero, the object
    appears lit up on dark maps. &lt;glow radius&gt; can be a value
    between 0 and 4, the higher, the more light does the object emit.
		</td>
	</tr>
	<tr>
		<td>image</td>
		<td>@ref obj::face</td>
		<td>    The image-name defines what image is displayed for this object
    in-game.
		</td>
	</tr>
	<tr>
		<td>inv. system object</td>
		<td>@ref FLAG_SYS_OBJECT</td>
		<td>    Marks an object as system object. System objects are ALWAYS invisible and
    hidden from the players. They can't be seen or detected and never will send
    any information about them to the player's client. System objects are put
    in layer 0 under the floor tiles.
		</td>
	</tr>
	<tr>
		<td>invisible</td>
		<td>@ref FLAG_IS_INVISIBLE</td>
		<td>    Generally makes the object invisible. Invisible objects will be shown
    if the player has "see invisible" (from spell or item). To hide objects
    totally from detection, use "sys_object".
		</td>
	</tr>
	<tr>
		<td>is animated</td>
		<td>@ref FLAG_ANIMATE</td>
		<td>    If set, the object is animated and animation is used.
    Note: Some special objects will use an animation NOT as animation but
    as frame list. Examples are buttons (which frames are changed by the
    object status of the button). IS_TURNABLE will enable direction turning
    for some object types. These flags are all "system" related. Be VERY
    careful when changing them.
		</td>
	</tr>
	<tr>
		<td>is turnable</td>
		<td>@ref FLAG_IS_TURNABLE</td>
		<td>    System flag. Object can be turned to the directions.
		</td>
	</tr>
	<tr>
		<td>layer</td>
		<td>@ref obj::layer</td>
		<td>    This is the map layer, the object will put in. The selected layer will affect where and
    how this object is shown on client side. Layer 0 is reserved for sys_object type objects
    and will NEVER be shown on client side. Layer 1 is for floor objects and layer 2 for
    floor masks. Layer 3 and 4 are for items on the ground. Layer 5 is for walls, layer
    6 is reserved for players and layer 7 is for spell effects and high flying/visible
    objects like arrows.
		</td>
	</tr>
	<tr>
		<td>magical</td>
		<td>@ref FLAG_IS_MAGICAL</td>
		<td>    If set, this object counts as "magical". Detect magic or
    identify will show this flag and the player will see a small
    blue M in the client's inventory part.
		</td>
	</tr>
	<tr>
		<td>name</td>
		<td>@ref obj::name</td>
		<td>    This is the name of the object, displayed to the player.
		</td>
	</tr>
	<tr>
		<td>no prayers</td>
		<td>@ref FLAG_NO_CLERIC</td>
		<td>    If enabled, it is impossible for players to use (cleric-)
    prayers on that spot.
		</td>
	</tr>
	<tr>
		<td>no spells</td>
		<td>@ref FLAG_NO_MAGIC</td>
		<td>    If enabled, it is impossible for players to use (wizard-)
    spells on that spot.
		</td>
	</tr>
	<tr>
		<td>no teleport</td>
		<td>@ref FLAG_NO_TELEPORT</td>
		<td>    Marks an object as no teleport object. A no teleport object can't be
    teleported by teleporter except if the object is inside the inventory of
    another object which can be teleported.
		</td>
	</tr>
	<tr>
		<td>non-pickable</td>
		<td>@ref FLAG_NO_PICK</td>
		<td>    If set, the object cannot be picked up (Neither by players nor monsters).
		</td>
	</tr>
	<tr>
		<td>one drop</td>
		<td>@ref FLAG_ONE_DROP</td>
		<td>    In the moment a player gets or applies this item, it will be
    flagged as godgiven and vanish when dropped to the ground.
		</td>
	</tr>
	<tr>
		<td>permanent cursed</td>
		<td>@ref FLAG_PERM_CURSED</td>
		<td>    The item is permanently cursed. If this flag is set, applying
    or unapplying it will set "cursed 1" again. This flag can't be
    removed by remove curse.
		</td>
	</tr>
	<tr>
		<td>permanent damned</td>
		<td>@ref FLAG_PERM_DAMNED</td>
		<td>    The item is permanently damned. If this flag is set, applying
    or unapplying it will set "damned 1" again. This flag can't be
    removed by remove damnation.
		</td>
	</tr>
	<tr>
		<td>player only</td>
		<td>@ref FLAG_PLAYER_ONLY</td>
		<td>    If set, only players can enter the tile the object with this flag is in too.
		</td>
	</tr>
	<tr>
		<td>quest item</td>
		<td>@ref FLAG_QUEST_ITEM</td>
		<td>    Item is a quest item. This item will be inserted in the
    quest container when a quest is finished and for that player
    this item will never drop again.
		</td>
	</tr>
	<tr>
		<td>spawn chance</td>
		<td>@ref obj::last_grace</td>
		<td>  Defines the base spawn chance. Value 0 means spawn
  try every actice phase. -1 means no spawn try.
  Values >0 means spawn chance is 1/value+1.
		</td>
	</tr>
	<tr>
		<td>spawn range</td>
		<td>@ref obj::last_heal</td>
		<td>    Size of an area around the spawn point where the mob should
    be placed randomly. If this value is set to 0, spawn point
    will find no free place. If set to 1, it test the space where
    the spawn point itself is. Increasing the value will start a search
    around the spot, starting in the south. value 2 search spot 0,-1,
    value 3 spot 1,-1, 4 = 0,-1 ...
    Warning: The Test will ONLY be done for the head - so careful when
    inserting big monsters on the map. Depending on the "free" area,
    the spawn point will drop the mob somewhere in the free area.
		</td>
	</tr>
	<tr>
		<td>speed</td>
		<td>@ref obj::speed</td>
		<td>    The &lt;speed&gt; determines how often a spawn point will
    control himself and/or the mob. If there is no mob, the
    spawn point will try to spawn a mob.
		</td>
	</tr>
	<tr>
		<td>start speed</td>
		<td>@ref obj::speed_left</td>
		<td>    NOTE: Without speed being non-zero, this value is not used. Only use
    for objects with speed (active objects)!
    When an active object (with 'speed' being non-zero) is put on a map, this
    value is used as counter. Every 'tick', 'speed' (if negative,
    value is turned positive before) is added to this value -
    if it is bigger 0 the object 'will do something' and this counter is
    decreased with -1.0.
    By default a normal object will be put on the map with start speed 0.
    It 'will do something' with the next coming 'tick'.
    Setting this value to -1.0 will put it on map but wait one full
    'lifetime' round until it does something.
    A 'fire object' should be put on map with start speed 0 - it should
    try to burn something in the moment it comes in the game. A bomb for
    example should be put with speed -1.0 on the map - it will stay then
    on map until the bomb becomes active - it explodes.
    The 'lifetime' round is determinated by speed. A speed of 1.0 will
    give a 'lifetime' round of 1 tick - a speed of 0.01 100 ticks.
    Special case: A negative speed value will add to start speed a random
    value between 0.0 to 0.9 . So, a speed of -0.1 with a start speed of
    -1.0 will result in speed 0.1 and start speed between -1.0 and -0.1.
    This is useful to let a row of same objects act in different tick ranges.
		</td>
	</tr>
	<tr>
		<td>sub type</td>
		<td>@ref obj::sub_type</td>
		<td>    This important value is used to define "sub types" for objects of the same object
    type. Examples are weapons, which are all from type WEAPON but can be different sub types
    like slash type, cleave type, 1hand, polearms and so on. This value goes to the client
    too. WARNING: not all objects have a sub_type and changing it without care can corrupt
    server AND/OR the clients. Normally this is not a subject to change outside arch definition.
    Containers with non-zero sub type will behave as apartment containers.
		</td>
	</tr>
	<tr>
		<td>title</td>
		<td>@ref obj::title</td>
		<td>    This is the object's title. Once an object is identified the title is
    attached to the name. Typical titles are "of mostrai", "of xray vision" etc.
		</td>
	</tr>
	<tr>
		<td>weight</td>
		<td>@ref obj::weight</td>
		<td>    This value defines the object's weight in gram (1000g is 1kg). Objects with
    zero weight are not pickable for players. Still, set the "non-pickable"-flag
    for explicitly non-pickable objects (hey, this is opensource.. you
    never know ;) ).
		</td>
	</tr>
</table>
*/
