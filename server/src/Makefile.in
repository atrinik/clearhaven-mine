#************************************************************************
#            Atrinik, a Multiplayer Online Role Playing Game            *
#                                                                       *
#    Copyright (C) 2009-2010 Alex Tokar and Atrinik Development Team    *
#                                                                       *
# Fork from Daimonin (Massive Multiplayer Online Role Playing Game)     *
# and Crossfire (Multiplayer game for X-windows).                       *
#                                                                       *
# This program is free software; you can redistribute it and/or modify  *
# it under the terms of the GNU General Public License as published by  *
# the Free Software Foundation; either version 2 of the License, or     *
# (at your option) any later version.                                   *
#                                                                       *
# This program is distributed in the hope that it will be useful,       *
# but WITHOUT ANY WARRANTY; without even the implied warranty of        *
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
# GNU General Public License for more details.                          *
#                                                                       *
# You should have received a copy of the GNU General Public License     *
# along with this program; if not, write to the Free Software           *
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.             *
#                                                                       *
# The author can be reached at admin@atrinik.org                        *
#***********************************************************************/

# All the lexical loaders
LOADERS := $(wildcard loaders/*.l)

# Now the source files
SRCS := \
	$(wildcard commands/*.c) \
	$(wildcard libs/zlib/*.c) \
	$(LOADERS:.l=.c) \
	$(wildcard random_maps/*.c) \
	$(wildcard server/*.c) \
	$(wildcard socket/*.c) \
	$(wildcard types/*.c)

# Object files
OBJS = $(SRCS:.c=.o)

# Location of 'rm'
RM = @RM@
# Location of 'flex'
FLEX = @LEX@
# Location of 'sed'
SED = @SED@
# Location of 'mkdir'
MKDIR = @MKDIR@
# Location of 'cp'
CP = @CP@

# Compilation flags
CFLAGS = @CFLAGS@ $(EXTRA_CFLAGS)
# Include directories
INCLUDES = -Iinclude -Irandom_maps -Ilibs/zlib/include $(EXTRA_INCLUDES)
# Libraries needed
LIBS = @LIBS@ $(EXTRA_LIBS)

# Compile the server.
atrinik_server: $(OBJS)
	$(RM) -f $@
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)

# Create prototype declarations.
proto:
	cproto -o include/proto.h.bak -D__CPROTO__ $(INCLUDES) `echo $(patsubst libs/zlib/%,,$(SRCS)) | $(SED) -e "s/loaders/loaders\/output/g"` || exit 5
	echo "#ifndef __CPROTO__" > include/proto.h
	$(SED) -e "/YY_BUFFER/d" -e "/yy_size_t/d" -e "s/(void);/();/g" -e "s/\/\* /\n\/\* /" -e "1s/^.//" < include/proto.h.bak >> include/proto.h
	echo "#endif" >> include/proto.h
	$(RM) -f include/proto.h.bak

clean::
	$(RM) -f atrinik_server $(OBJS) $(LOADERS:.l=.c)

distclean:: clean
	$(RM) -f Makefile include/autoconf.h

# Compile the C files.
.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Run Flex
loaders/%.c: loaders/%.l
	$(FLEX) -i --prefix `echo yy_$< | $(SED) -e "s/loaders\///" -e "s/.l//"` -o `echo $< | $(SED) -e "s/.l/.c/g"` $<

	@if [ ! -d loaders/output ]; then \
		$(MKDIR) loaders/output; \
	fi

	$(CP) `echo $< | $(SED) -e "s/.l/.c/g"` `echo $< | $(SED) -e "s/.l/.c/g" -e "s/loaders/loaders\/output/"`

all: atrinik_server
